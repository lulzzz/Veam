// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Veam.Data;

namespace Veam.Infra.Data.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20200216233633_g2")]
    partial class g2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Veam.Base.Domain.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("uom")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Product","Base");
                });

            modelBuilder.Entity("Veam.Base.Domain.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory","Base");
                });

            modelBuilder.Entity("Veam.Base.Domain.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductType","Base");
                });

            modelBuilder.Entity("Veam.Base.Domain.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendor","Base");
                });

            modelBuilder.Entity("Veam.Base.Domain.VendorLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("jobTitle")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("vendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("vendorId");

                    b.ToTable("VendorLine","Base");
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Building", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("buildingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("buildingNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Building","Rent");
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.MeterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MetertypeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeterType","Rent");
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Meters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeterNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("meterTypeId")
                        .HasColumnType("int");

                    b.Property<long?>("permiseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("meterTypeId");

                    b.HasIndex("permiseId");

                    b.ToTable("Meters","Rent");
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Permises", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("buildingId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("floorNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("hallNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("locationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("buildingId");

                    b.ToTable("Permises","Rent");
                });

            modelBuilder.Entity("Veam.Centers.Domain.Center", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("buildingId")
                        .HasColumnType("bigint");

                    b.Property<string>("centerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("centerTypeId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("isHQ")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subsideryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("centerTypeId");

                    b.HasIndex("subsideryId");

                    b.ToTable("Center");
                });

            modelBuilder.Entity("Veam.Centers.Domain.CenterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CenterTypes");
                });

            modelBuilder.Entity("Veam.Centers.Domain.Hall", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("centerId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("floorNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("hallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("hallNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("locationNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("centerId");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("Veam.Centers.Domain.Subsidery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("company")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subsideries");
                });

            modelBuilder.Entity("Veam.EAM.Domain.Asset", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("assetName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<long?>("assetPurchaseId")
                        .HasColumnType("bigint");

                    b.Property<string>("assetTag")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("assetstatusId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serialNo")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("assetPurchaseId");

                    b.HasIndex("assetstatusId");

                    b.ToTable("Asset","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.AssetPurchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("notes")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<long>("vendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AssetPurchase","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.AssetStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetStatus","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.AssetUploads", b =>
                {
                    b.Property<long>("assetId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.HasKey("assetId", "FileId");

                    b.ToTable("AssetUploads","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.CheckOut", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("acceptedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("approveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("approvedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("assetConditon")
                        .HasColumnType("int");

                    b.Property<long>("assetId")
                        .HasColumnType("bigint");

                    b.Property<int>("assignedType")
                        .HasColumnType("int");

                    b.Property<int>("assignmentStatus")
                        .HasColumnType("int");

                    b.Property<long>("centerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("checkedOutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("conditionNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("employeeId")
                        .HasColumnType("bigint");

                    b.Property<long>("hallId")
                        .HasColumnType("bigint");

                    b.Property<long>("managerId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("parentAssetId")
                        .HasColumnType("bigint");

                    b.Property<string>("requestedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("requestedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("retiredDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("returnedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("subsideryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("assetId");

                    b.ToTable("CheckOut","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.FileDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("createdAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("createdBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("fileNotes")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("fileSize")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset?>("modifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("modifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDetails","EAM");
                });

            modelBuilder.Entity("Veam.EAM.Domain.PurchaseFiles", b =>
                {
                    b.Property<long>("AssetpurchaseId")
                        .HasColumnType("bigint");

                    b.Property<long>("FileId")
                        .HasColumnType("bigint");

                    b.HasKey("AssetpurchaseId", "FileId");

                    b.HasIndex("FileId");

                    b.ToTable("PurchaseFiles","EAM");
                });

            modelBuilder.Entity("Veam.Base.Domain.Product", b =>
                {
                    b.HasOne("Veam.Base.Domain.ProductCategory", "productCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veam.Base.Domain.ProductType", "productType")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.Base.Domain.Vendor", b =>
                {
                    b.OwnsOne("Veam.Base.Domain.Communication", "OfficeContact", b1 =>
                        {
                            b1.Property<long>("VendorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("mobilePhone")
                                .HasColumnName("contact_Mobile")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("officePhone")
                                .HasColumnName("contact_Phone")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("personalEmail")
                                .HasColumnName("contact_personalEmail")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("workEmail")
                                .HasColumnName("contact_workEmail")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.HasKey("VendorId");

                            b1.ToTable("Vendor");

                            b1.WithOwner()
                                .HasForeignKey("VendorId");
                        });

                    b.OwnsOne("Veam.Base.Domain.Company", "Company", b1 =>
                        {
                            b1.Property<long>("VendorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Country")
                                .HasColumnName("company_Country")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("GstNo")
                                .HasColumnName("company_GstNo")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("RegisterCompanyName")
                                .HasColumnName("company_Name")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.HasKey("VendorId");

                            b1.ToTable("Vendor");

                            b1.WithOwner()
                                .HasForeignKey("VendorId");
                        });

                    b.OwnsOne("Veam.Domain.Core.ValueObjects.Address", "BillAddress", b1 =>
                        {
                            b1.Property<long>("VendorId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("city")
                                .HasColumnName("add_city")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("line1")
                                .HasColumnName("add_line1")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("line2")
                                .HasColumnName("add_line2")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("state")
                                .HasColumnName("add_state")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("zip")
                                .HasColumnName("add_zip")
                                .HasColumnType("nvarchar(6)")
                                .HasMaxLength(6);

                            b1.HasKey("VendorId");

                            b1.ToTable("Vendor");

                            b1.WithOwner()
                                .HasForeignKey("VendorId");
                        });
                });

            modelBuilder.Entity("Veam.Base.Domain.VendorLine", b =>
                {
                    b.HasOne("Veam.Base.Domain.Vendor", "vendor")
                        .WithMany("vendorLines")
                        .HasForeignKey("vendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Veam.Base.Domain.Communication", "personContact", b1 =>
                        {
                            b1.Property<long>("VendorLineId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("mobilePhone")
                                .HasColumnName("contact_Mobile")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("officePhone")
                                .HasColumnName("contact_Phone")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("personalEmail")
                                .HasColumnName("contact_personalEmail")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("workEmail")
                                .HasColumnName("contact_workEmail")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.HasKey("VendorLineId");

                            b1.ToTable("VendorLine");

                            b1.WithOwner()
                                .HasForeignKey("VendorLineId");
                        });

                    b.OwnsOne("Veam.Base.Domain.Person", "person", b1 =>
                        {
                            b1.Property<long>("VendorLineId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("firstName")
                                .HasColumnName("person_Fname")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("gender")
                                .HasColumnName("person_Gender")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("lastName")
                                .HasColumnName("person_Lname")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("middleName")
                                .HasColumnName("person_Mname")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("nickName")
                                .HasColumnName("person_Nname")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("salutation")
                                .HasColumnName("person_Salutation")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.HasKey("VendorLineId");

                            b1.ToTable("VendorLine");

                            b1.WithOwner()
                                .HasForeignKey("VendorLineId");
                        });
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Building", b =>
                {
                    b.OwnsOne("Veam.Domain.Core.ValueObjects.Address", "address", b1 =>
                        {
                            b1.Property<long>("BuildingId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("city")
                                .HasColumnName("add_city")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("line1")
                                .HasColumnName("add_line1")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("line2")
                                .HasColumnName("add_line2")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("state")
                                .HasColumnName("add_state")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.Property<string>("zip")
                                .HasColumnName("add_zip")
                                .HasColumnType("nvarchar(6)")
                                .HasMaxLength(6);

                            b1.HasKey("BuildingId");

                            b1.ToTable("Building");

                            b1.WithOwner()
                                .HasForeignKey("BuildingId");
                        });
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Meters", b =>
                {
                    b.HasOne("Veam.CenterRent.Domain.MeterType", "meterType")
                        .WithMany()
                        .HasForeignKey("meterTypeId");

                    b.HasOne("Veam.CenterRent.Domain.Permises", "permise")
                        .WithMany("meters")
                        .HasForeignKey("permiseId");
                });

            modelBuilder.Entity("Veam.CenterRent.Domain.Permises", b =>
                {
                    b.HasOne("Veam.CenterRent.Domain.Building", "building")
                        .WithMany("Permises")
                        .HasForeignKey("buildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.Centers.Domain.Center", b =>
                {
                    b.HasOne("Veam.Centers.Domain.CenterType", "centerType")
                        .WithMany()
                        .HasForeignKey("centerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veam.Centers.Domain.Subsidery", "subsidery")
                        .WithMany()
                        .HasForeignKey("subsideryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.Centers.Domain.Hall", b =>
                {
                    b.HasOne("Veam.Centers.Domain.Center", "center")
                        .WithMany("halls")
                        .HasForeignKey("centerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.EAM.Domain.Asset", b =>
                {
                    b.HasOne("Veam.EAM.Domain.AssetPurchase", "assetPurchase")
                        .WithMany("Assets")
                        .HasForeignKey("assetPurchaseId");

                    b.HasOne("Veam.EAM.Domain.AssetStatus", "status")
                        .WithMany()
                        .HasForeignKey("assetstatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Veam.EAM.Domain.AssetModel", "assetModel", b1 =>
                        {
                            b1.Property<long>("AssetId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("brand")
                                .HasColumnName("model_brand")
                                .HasColumnType("nvarchar(50)")
                                .HasMaxLength(50);

                            b1.Property<string>("name")
                                .HasColumnName("model_Name")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("number")
                                .HasColumnName("model_number")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<string>("product")
                                .HasColumnName("model_product")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.HasKey("AssetId");

                            b1.ToTable("Asset");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.OwnsOne("Veam.EAM.Domain.WarrantyInfo", "warranty", b1 =>
                        {
                            b1.Property<long>("AssetId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<DateTime?>("EndDate")
                                .HasColumnName("warranty_EndDate")
                                .HasColumnType("datetime2")
                                .HasMaxLength(50);

                            b1.Property<DateTime?>("StartDate")
                                .HasColumnName("warranty_StartDate")
                                .HasColumnType("datetime2")
                                .HasMaxLength(75);

                            b1.Property<string>("notes")
                                .HasColumnName("warranty_notes")
                                .HasColumnType("nvarchar(6)")
                                .HasMaxLength(6);

                            b1.Property<int?>("periodinMonths")
                                .HasColumnName("warranty_Months")
                                .HasColumnType("int")
                                .HasMaxLength(75);

                            b1.Property<string>("warrantyBy")
                                .HasColumnName("warranty_By")
                                .HasColumnType("nvarchar(30)")
                                .HasMaxLength(30);

                            b1.HasKey("AssetId");

                            b1.ToTable("Asset");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });
                });

            modelBuilder.Entity("Veam.EAM.Domain.AssetPurchase", b =>
                {
                    b.OwnsOne("Veam.EAM.Domain.BillDetails", "assetBills", b1 =>
                        {
                            b1.Property<long>("AssetPurchaseId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("billNo")
                                .IsRequired()
                                .HasColumnName("company_Name")
                                .HasColumnType("nvarchar(75)")
                                .HasMaxLength(75);

                            b1.Property<DateTime>("billedDate")
                                .HasColumnName("company_Country")
                                .HasColumnType("datetime2")
                                .HasMaxLength(75);

                            b1.HasKey("AssetPurchaseId");

                            b1.ToTable("AssetPurchase");

                            b1.WithOwner()
                                .HasForeignKey("AssetPurchaseId");
                        });
                });

            modelBuilder.Entity("Veam.EAM.Domain.AssetUploads", b =>
                {
                    b.HasOne("Veam.EAM.Domain.Asset", "asset")
                        .WithMany("assetUploads")
                        .HasForeignKey("assetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veam.EAM.Domain.FileDetails", "files")
                        .WithMany()
                        .HasForeignKey("assetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.EAM.Domain.CheckOut", b =>
                {
                    b.HasOne("Veam.EAM.Domain.Asset", "asset")
                        .WithMany("Checkouts")
                        .HasForeignKey("assetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Veam.EAM.Domain.PurchaseFiles", b =>
                {
                    b.HasOne("Veam.EAM.Domain.AssetPurchase", "AssetPurchase")
                        .WithMany("purchaseFiles")
                        .HasForeignKey("AssetpurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veam.EAM.Domain.FileDetails", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
