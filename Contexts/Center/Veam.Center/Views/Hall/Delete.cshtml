@model Veam.Centers.ViewModels.HallQueryVM


@{
    ViewData["Title"] = "Delete";
    Layout = "~/Views/Shared/_AdminlteNetcoreDelete.cshtml";
    ViewData["EntityIcon"] = "fa fa-cubes";
    ViewData["DeleteInfo"] = "Can Not Delete Existing Center which have related Records PO, Good, or others";
    //netcore.Models.Invent.Receiving receiving = _context.Receiving.Where(x => x.warehouseId.Equals(Model.warehouseId)).FirstOrDefault();
    //netcore.Models.Invent.Shipment shipment = _context.Shipment.Where(x => x.warehouseId.Equals(Model.warehouseId)).FirstOrDefault();
    //netcore.Models.Invent.TransferOrder to = _context.TransferOrder.Where(x => x.warehouseIdFrom.Equals(Model.warehouseId) || x.warehouseIdTo.Equals(Model.warehouseId)).FirstOrDefault();
   // ViewData["IsCanDeleted"] =false;
    //if (receiving == null && shipment == null && to == null)
    //{
    //    ViewData["IsCanDeleted"] = true;
    //}
}


@Html.Partial("_StatusMessage", (string)ViewBag.StatusMessage)
<div>

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CenterName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CenterName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.hallName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.hallName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FloorNo)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FloorNo)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.HallNo)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.HallNo)
        </dd>
       
    </dl>

</div>
