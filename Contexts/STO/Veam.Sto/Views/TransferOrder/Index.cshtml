@model IEnumerable<netcore.Models.Invent.TransferOrder>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminlteNetcoreIndex.cshtml";
    ViewData["EntityIcon"] = "fa fa-recycle";
    ViewData["ListTitle"] = "List of Transfer Order";
    ViewData["IndexInfo"] = " (TO) is a process of transferring goods from one warehouse to another. From and To warehouse must be different";
}


<table class="table table-hover table-striped" style="width:100%">
    <thead>
        <tr>
            <th>   <a asp-action="Create" class="btn bg-olive-active btn-sm "><i class="fa fa-plus margin-r-5"></i><span>Add New</span></a></th>
            <th>
                @Html.DisplayNameFor(model => model.transferOrderNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.transferOrderStatus)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.picName)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.branchIdFrom)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.warehouseIdFrom)
            </th>
            <th class="hidden">
                @Html.DisplayNameFor(model => model.branchIdTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.warehouseIdTo)
            </th>

        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <div class="tools">
                        <a asp-action="Edit" asp-route-id="@item.transferOrderId" class="btn btn-primary btn-xs"><i class="fa fa-pencil"></i></a>
                        <a asp-action="Details" asp-route-id="@item.transferOrderId" class="btn btn-primary btn-xs"><i class="fa fa-list"></i></a>
                        <a asp-action="Delete" asp-route-id="@item.transferOrderId" class="btn btn-danger btn-xs"><i class="fa fa-trash"></i></a>
                    </div>
                   
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.transferOrderNumber)
                </td>
                <td>
                    @if (item.transferOrderStatus == netcore.Models.Invent.TransferOrderStatus.Completed)
                    {
                        <span class="label label-success">
                            @Html.DisplayFor(modelItem => item.transferOrderStatus)
                        </span>

                    }
                    @if (item.transferOrderStatus == netcore.Models.Invent.TransferOrderStatus.Open)
                    {
                        <span class="label label-primary">
                            @Html.DisplayFor(modelItem => item.transferOrderStatus)
                        </span>

                    }
                    @if (item.transferOrderStatus == netcore.Models.Invent.TransferOrderStatus.Draft)
                    {
                        <span class="label label-warning">
                            @Html.DisplayFor(modelItem => item.transferOrderStatus)
                        </span>

                    }
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.picName)
                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.branchIdFrom)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isIssued)
                    @Html.DisplayFor(modelItem => item.warehouseFrom.warehouseName)

                </td>
                <td class="hidden">
                    @Html.DisplayFor(modelItem => item.branchIdTo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.isReceived)
                    @Html.DisplayFor(modelItem => item.warehouseTo.warehouseName)

                </td>

            </tr>
        }
    </tbody>
</table>
